{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/server/index.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,oDAA4B;AAC5B,sDAA8B;AAC9B,yEAA0C;AAC1C,iFAAgE;AAEhE,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,WAAW,GAAG,KAAK,EAAE,qBAA6B,EAAE,EAAE;IAC1D,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;IACzD,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;IAEtB,MAAM,SAAS,GAAG,MAAM,IAAA,oBAAG,EAAC,GAAG,CAAC,CAAC;IAEjC,MAAM,MAAM,GAAG,cAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAEtC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;QACvB,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,qBAAqB,IAAI,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF,CAAC,KAAK,UAAU,YAAY;IAC1B,IAAI,CAAC;QACH,MAAM,WAAW,CAAC,uBAAoB,CAAC,sBAAsB,CAAC,CAAC;QAC/D,OAAO,CAAC,GAAG,EAAE,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,EAAE,CAAC;IAChB,CAAC;IAAC,OAAO,KAAc,EAAE,CAAC;QACxB,MAAM,KAAK,CAAC;IACd,CAAC;IAED,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,KAAK;QAC7C,OAAO,CAAC,KAAK,CACX,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,qBAAqB,EAChD,KAAK,CAAC,OAAO,CACd,CAAC;QACF,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,EAAE,CAAC","sourcesContent":["import http from \"http\";\nimport dotenv from \"dotenv\";\nimport express from \"express\";\nimport App from \"@src/express/appService\";\nimport constantMessageValue from \"@src/constants/stringnummisc\";\n\ndotenv.config();\n\nconst StartServer = async (server_status_message: string) => {\n  const PORT = process.env.PORT || process.env.SERVER_PORT;\n  const app = express();\n\n  const serverApp = await App(app);\n\n  const server = http.createServer(app);\n\n  server.listen(PORT, () => {\n    console.log(\"\\x1b[36m%s\\x1b[0m\", `${server_status_message} ${PORT}`);\n  });\n\n  return serverApp;\n};\n\n(async function runServerRun() {\n  try {\n    await StartServer(constantMessageValue.server_running_message);\n    console.log();\n    console.log(\"System status...\");\n    console.log();\n  } catch (error: unknown) {\n    throw error;\n  }\n\n  process.on(\"uncaughtException\", function (error) {\n    console.error(\n      new Date().toUTCString() + \" uncaughtException:\",\n      error.message,\n    );\n    console.error(error.stack);\n    process.exit(1);\n  });\n})();\n"]}