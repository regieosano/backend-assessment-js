{"version":3,"file":"update.js","sourceRoot":"","sources":["../../../../src/services/products/mutations/update.ts"],"names":[],"mappings":";;;AACA,0CAA+D;AAExD,MAAM,cAAc,GAAa,KAAK,IAAqB,EAAE;IAClE,IAAI,CAAC;QACH,MAAM,iBAAiB,GAAG,MAAM,IAAA,gBAAW,GAAE,CAAC;QAE9C,iBAAiB,CAAC,GAAG,CAAC,KAAK,EAAE,gBAA6B,EAAE,EAAE;YAC5D,yDAAyD;YACzD,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAW,EAAE,EAAE;gBAC/C,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,MAAM,IAAA,kBAAa,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,EAAE,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,OAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC;IAC5C,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;AACH,CAAC,CAAC;AAjBW,QAAA,cAAc,kBAiBzB","sourcesContent":["import { ProductType } from \"@src/types\";\nimport { getProducts, productUpdate } from \"@src/utilities/db\";\n\nexport const updateProducts: Function = async (): Promise<Object> => {\n  try {\n    const productsForUpdate = await getProducts();\n\n    productsForUpdate.map(async (productForUpdate: ProductType) => {\n      // loop through the product codes and add it in the title\n      productForUpdate.productCode.map((sku: string) => {\n        productForUpdate.title.push(sku);\n      });\n\n      await productUpdate(productForUpdate, productForUpdate.id);\n    });\n\n    return { message: \"DB has been updated\" };\n  } catch (error: any) {\n    throw new Error(error);\n  }\n};\n"]}